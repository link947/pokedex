* {
    box-sizing: border-box;
    font-family: "Pixelify Sans", sans-serif;
}

body {
    position: relative;
    margin: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
    overflow-x: hidden !important;
}

header {
    display: flex;
    flex-direction: column;
    align-items: center;
    color: #fff;
    width: 100%;
    padding: 0 20px;
}

.logo {
    padding-top: 24px;
    width: 100%;
    display: flex;
    justify-content: center;
}

.header-border {
    width: 100%;
    height: 64px;
    background: url("assets/img/header-border.png");
    background: url("assets/img/cloud.png")
}

header h1 {
    text-align: center;
    color: #000;
}

.logo img {
    max-height: 120px;
    max-width: 100%;
}

.input-container {
    width: 100%;
}

main {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
}

input,
button {
    font-size: 20px;
    padding: 20px;
}

button {
    cursor: pointer;
}

.modal-content button {
    font-size: 16px;
    padding: 10px;
}

footer {
    color: #000;
    font-weight: 600;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    background: url("assets/img/header-bg.png");
}

.footer-border {
    margin-top: 50px;
    background: url("assets/img/footer-bg.png");
    background-size: 64px;
    height: 24px;
    width: 100%;
}

button:disabled {
    background-color: #ddd;
    cursor: not-allowed;
    opacity: .5;
}

.texture {
    background: url("assets/img/pixel-texture.png");
    background-size: 200px;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    opacity: .2;
}

#cloud-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100%;
    overflow: hidden;
    pointer-events: none; /* Avoids interaction with clouds */
    z-index: -1;
  }
  
  .cloud {
    position: absolute;
    opacity: 0.8;
    animation: moveClouds linear infinite;
    transform: translateX(120vw);
  }
  
  /* Parallax scrolling */
  @keyframes moveClouds {
    from {
      transform: translateX(120vw);
    }
    to {
      transform: translateX(-120vw);
    }
  }